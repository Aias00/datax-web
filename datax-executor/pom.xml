<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.wugui</groupId>
        <artifactId>datax-web</artifactId>
        <version>2.1.3-SNAPSHOT</version>
    </parent>
    <artifactId>datax-executor</artifactId>
    <packaging>jar</packaging>
    <properties>
        <java.version>1.8</java.version>
        <target.dir>distribution</target.dir>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.wugui</groupId>
            <artifactId>datax-core</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <!-- 指明编译源代码时使用的字符编码，maven编译的时候默认使用的GBK编码，通过encoding属性设置字符编码，告诉maven这个项目使用UTF-8来编译 -->
                    <encoding>utf8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.wugui.datax.executor.DataXExecutorApplication</mainClass> <!-- 此处为主入口-->
                        </manifest>
                    </archive>
                </configuration>
<!--                <configuration>-->
<!--                    <excludes>-->
<!--                        <exclude>**/*.yml</exclude>-->
<!--                        <exclude>**/*.properties</exclude>-->
<!--                        <exclude>**/*.sh</exclude>-->
<!--                        <exclude>**/*.xml</exclude>-->
<!--                    </excludes>-->
<!--                </configuration>-->
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.6.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--移动配置文件到外部文件夹-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/${target.dir}" />
                                <mkdir dir="${project.build.directory}/${target.dir}/conf" />
                                <mkdir dir="${project.build.directory}/${target.dir}/bin" />
                                <copy todir="${project.build.directory}/${target.dir}/conf">
                                    <fileset dir="${project.build.directory}/classes">
                                        <include name="application.yml" />
                                        <include name="application*.yml" />
                                        <include name="banner.txt" />
                                        <include name="*.xml" />
                                    </fileset>
                                </copy>
                                <copy todir="${project.build.directory}/${target.dir}">
                                    <fileset dir="${project.build.directory}">
                                        <include name="*.jar" />
                                    </fileset>
                                </copy>
                                <fixcrlf file="${project.basedir}/common/script/datax-executor" eol="lf" eof="remove" encoding="utf-8" tab="add" destDir="${project.build.directory}/${target.dir}/bin" />
                                <chmod file="${project.build.directory}/${target.dir}/bin/datax-executor" perm="755"/>
                                <fixcrlf file="${project.basedir}/common/dockerfile/entrypoint.sh" eol="lf" eof="remove" encoding="utf-8" tab="add" destDir="${project.build.directory}/${target.dir}/bin" />
                                <fixcrlf file="${project.basedir}/common/dockerfile/Dockerfile" eol="lf" eof="remove" encoding="utf-8" tab="add" destDir="${project.build.directory}/${target.dir}" />
                                <fixcrlf file="${project.basedir}/common/dockerfile/*-docker.sh" eol="lf" eof="remove" encoding="utf-8" tab="add" destDir="${project.build.directory}/${target.dir}" />
                                <fixcrlf file="${project.basedir}/common/dockerfile/README-docker部署文档.md" eol="lf" eof="remove" encoding="utf-8" tab="add" destDir="${project.build.directory}/${target.dir}" />
                                <zip basedir="${project.build.directory}/${target.dir}" destfile="${project.build.directory}/datax-executor-${project.version}.zip" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--docker插件 -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.40.1</version>
                <executions>
                    <execution>
                        <id>tag-latest</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>tag-version</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Docker 远程管理地址-->
                    <!--                    <dockerHost>tcp://127.0.0.1:2375</dockerHost>-->
                    <!--私服地址不使用可以不配置-->
                    <registry>dockerhub.dap.local</registry>
                    <images>
                        <image>
                            <!--                            <name>expos/expos-metrics:${project.version}</name>-->
                            <name>dockerhub.dap.local/expos-metrics-job:${project.version}</name>
                            <build>
                                <args>
                                    <!--为Dockerfile中提供参数, . 表示在dockerFile位置当前位置-->
                                    <OUT_DIR_DATAX_EXECUTOR>.</OUT_DIR_DATAX_EXECUTOR>
                                </args>
                                <!--dockerFile位置-->
                                <dockerFileDir>${project.build.directory}/${target.dir}</dockerFileDir>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>assemble</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <!-- install -->
                        <phase>install</phase>
                    </execution>
                </executions>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <attach>false</attach>
                    <descriptors>
                        <descriptor>${basedir}/src/main/assembly/deploy.xml</descriptor>
                    </descriptors>
                    <finalName>${project.artifactId}_${project.version}_1</finalName>
                    <outputDirectory>${project.parent.basedir}/packages</outputDirectory>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!--包含文件夹以及子文件夹下所有资源-->
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>